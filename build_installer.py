"""
Script para gerar o instalador execut√°vel do Sistema de Busca
"""
import os
import subprocess
import sys

def install_pyinstaller():
    """Instala o PyInstaller se n√£o estiver instalado"""
    try:
        import PyInstaller
        print("‚úÖ PyInstaller j√° est√° instalado")
    except ImportError:
        print("üì¶ Instalando PyInstaller...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])
        print("‚úÖ PyInstaller instalado com sucesso!")

def build_executable():
    """Gera o execut√°vel"""
    print("üî® Gerando execut√°vel...")
    
    # Comando PyInstaller
    cmd = [
        "C:\\Users\\Administrador\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\pyinstaller.exe",
        "--onefile",                    # Arquivo √∫nico
        "--windowed",                   # Sem console (aplica√ß√£o desktop)
        "--name=SistemaBuscaArquivos",  # Nome do execut√°vel
        "--icon=icon.ico",              # √çcone (se existir)
        "--add-data=desktop_config.json;.",  # Incluir arquivo de configura√ß√£o
        "--hidden-import=tkinter",
        "--hidden-import=tkinter.ttk",
        "--hidden-import=docx",
        "--hidden-import=PyPDF2",
        "--hidden-import=ftplib",
        "desktop_app.py"
    ]
    
    # Remover par√¢metros que podem n√£o existir
    if not os.path.exists("icon.ico"):
        cmd.remove("--icon=icon.ico")
    
    try:
        subprocess.check_call(cmd)
        print("‚úÖ Execut√°vel gerado com sucesso!")
        print("üìÅ Arquivo criado em: dist/SistemaBuscaArquivos.exe")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao gerar execut√°vel: {e}")
        return False
    
    return True

def create_installer_script():
    """Cria script de instala√ß√£o"""
    print("üìù Criando script de instala√ß√£o...")
    
    installer_content = '''@echo off
echo ========================================
echo Sistema de Busca de Arquivos - Instalador
echo ========================================
echo.

REM Verificar se j√° est√° instalado
if exist "%ProgramFiles%\\SistemaBuscaArquivos" (
    echo Desinstalando versao anterior...
    rmdir /s /q "%ProgramFiles%\\SistemaBuscaArquivos"
)

REM Criar diret√≥rio de instala√ß√£o
echo Criando diretorio de instalacao...
mkdir "%ProgramFiles%\\SistemaBuscaArquivos"

REM Copiar arquivos
echo Copiando arquivos...
copy "SistemaBuscaArquivos.exe" "%ProgramFiles%\\SistemaBuscaArquivos\\"

REM Criar atalho no menu iniciar
echo Criando atalho no menu iniciar...
powershell "$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Sistema de Busca de Arquivos.lnk'); $Shortcut.TargetPath = '%ProgramFiles%\\SistemaBuscaArquivos\\SistemaBuscaArquivos.exe'; $Shortcut.Save()"

REM Criar atalho na √°rea de trabalho
echo Criando atalho na area de trabalho...
powershell "$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%USERPROFILE%\\Desktop\\Sistema de Busca de Arquivos.lnk'); $Shortcut.TargetPath = '%ProgramFiles%\\SistemaBuscaArquivos\\SistemaBuscaArquivos.exe'; $Shortcut.Save()"

echo.
echo ========================================
echo Instalacao concluida com sucesso!
echo ========================================
echo.
echo O programa foi instalado em: %ProgramFiles%\\SistemaBuscaArquivos
echo Atalhos criados no menu iniciar e area de trabalho
echo.
pause
'''
    
    with open("installer.bat", "w", encoding="utf-8") as f:
        f.write(installer_content)
    
    print("‚úÖ Script de instala√ß√£o criado: installer.bat")

def create_uninstaller():
    """Cria desinstalador"""
    print("üóëÔ∏è Criando desinstalador...")
    
    uninstaller_content = '''@echo off
echo ========================================
echo Sistema de Busca de Arquivos - Desinstalador
echo ========================================
echo.

echo Tem certeza que deseja desinstalar? (S/N)
set /p confirm=

if /i "%confirm%"=="S" (
    echo Desinstalando...
    
    REM Remover atalhos
    if exist "%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Sistema de Busca de Arquivos.lnk" (
        del "%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Sistema de Busca de Arquivos.lnk"
    )
    
    if exist "%USERPROFILE%\\Desktop\\Sistema de Busca de Arquivos.lnk" (
        del "%USERPROFILE%\\Desktop\\Sistema de Busca de Arquivos.lnk"
    )
    
    REM Remover diret√≥rio de instala√ß√£o
    if exist "%ProgramFiles%\\SistemaBuscaArquivos" (
        rmdir /s /q "%ProgramFiles%\\SistemaBuscaArquivos"
    )
    
    echo Desinstalacao concluida!
) else (
    echo Desinstalacao cancelada.
)

pause
'''
    
    with open("uninstaller.bat", "w", encoding="utf-8") as f:
        f.write(uninstaller_content)
    
    print("‚úÖ Desinstalador criado: uninstaller.bat")

def create_readme():
    """Cria arquivo README para o usu√°rio final"""
    print("üìñ Criando documenta√ß√£o...")
    
    readme_content = '''# Sistema de Busca de Arquivos - Desktop

## Descri√ß√£o
Sistema profissional para busca e indexa√ß√£o de arquivos Word (.docx) e PDF em servidores de arquivos.

## Recursos
- ‚úÖ Conex√£o com servidores locais, FTP, SMB e WebDAV
- ‚úÖ Indexa√ß√£o autom√°tica de documentos
- ‚úÖ Busca por nome e conte√∫do dos arquivos
- ‚úÖ Interface desktop profissional
- ‚úÖ Sistema de relev√¢ncia inteligente
- ‚úÖ Estat√≠sticas de indexa√ß√£o

## Tipos de Servidor Suportados

### 1. Servidor Local
- Caminho para pasta local na m√°quina
- Exemplo: C:\\Documentos\\Empresa

### 2. Servidor FTP
- Host/IP do servidor FTP
- Porta (padr√£o: 21)
- Usu√°rio e senha
- Caminho no servidor

### 3. Servidor SMB (Windows/Network)
- Host/IP do servidor
- Usu√°rio e senha de dom√≠nio
- Caminho compartilhado

### 4. Servidor WebDAV
- URL do servidor WebDAV
- Usu√°rio e senha
- Caminho no servidor

## Como Usar

### Primeira Configura√ß√£o
1. Abra o programa
2. Configure o tipo de servidor
3. Preencha as informa√ß√µes de conex√£o
4. Clique em "Conectar" para testar
5. Clique em "Salvar Config" para salvar

### Indexa√ß√£o
1. Ap√≥s conectar, clique em "Indexar Arquivos"
2. Aguarde a indexa√ß√£o concluir
3. Verifique as estat√≠sticas

### Busca
1. Digite o termo de busca na barra
2. Pressione Enter ou clique em "Buscar"
3. Visualize os resultados ordenados por relev√¢ncia

## Suporte T√©cnico
Para suporte t√©cnico, entre em contato com nossa equipe.

## Licen√ßa
Este software √© licenciado para uso comercial.
'''
    
    with open("README_Usuario.txt", "w", encoding="utf-8") as f:
        f.write(readme_content)
    
    print("‚úÖ Documenta√ß√£o criada: README_Usuario.txt")

def main():
    print("üöÄ Iniciando processo de cria√ß√£o do instalador...")
    print()
    
    # 1. Instalar PyInstaller
    install_pyinstaller()
    print()
    
    # 2. Gerar execut√°vel
    if build_executable():
        print()
        
        # 3. Criar script de instala√ß√£o
        create_installer_script()
        print()
        
        # 4. Criar desinstalador
        create_uninstaller()
        print()
        
        # 5. Criar documenta√ß√£o
        create_readme()
        print()
        
        print("üéâ Processo conclu√≠do com sucesso!")
        print()
        print("üìÅ Arquivos gerados:")
        print("  - dist/SistemaBuscaArquivos.exe (execut√°vel)")
        print("  - installer.bat (instalador)")
        print("  - uninstaller.bat (desinstalador)")
        print("  - README_Usuario.txt (documenta√ß√£o)")
        print()
        print("üí° Para distribuir:")
        print("  1. Compacte todos os arquivos em um ZIP")
        print("  2. Envie para seus clientes")
        print("  3. Eles executam installer.bat para instalar")
        
    else:
        print("‚ùå Falha na cria√ß√£o do execut√°vel")

if __name__ == "__main__":
    main()
